name: Release

on:
  release:
    types: [created]

env:
  golang-version: 1.21.4
  golangci-lint-version: v1.55.2
  docker-registry: ghcr.io
  docker-image-name: ${{ github.repository }}

defaults:
  run:
    shell: bash --noprofile --norc -eo pipefail {0}

jobs:
  docker:
    name: docker
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - uses: actions/checkout@v3
      - name: Docker Build
        run: docker build . --file Dockerfile --tag ${{ env.docker-registry }}/${{ env.docker-image-name }}:${{ github.ref_name }}

      - name: Log into registry ${{ env.docker-registry }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.docker-registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker Hub Push (versioned)
        run: docker push ${{ env.docker-registry }}/${{ env.docker-image-name }}:${{ github.ref_name }}

      - name: Docker Hub Push (re-tag as latest)
        run: docker tag ${{ env.docker-registry }}/${{ env.docker-image-name }}:${{ github.ref_name }} ${{ env.docker-registry }}/${{ env.docker-image-name }}:latest

      - name: Docker Hub Push (latest)
        run: docker push ${{ env.docker-registry }}/${{ env.docker-image-name }}:latest

  goreleaser:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      packages: write

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - run: git fetch --force --tags

      - uses: actions/setup-go@v4
        with:
          go-version: ${{ env.golang-version }}

      - uses: goreleaser/goreleaser-action@v4
        with:
          distribution: goreleaser
          version: latest
          args: release --clean -f .goreleaser.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

name: "Build / Lint / Tests"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "**" ]

env:
  golang-version: 1.21.4
  golangci-lint-version: v1.55.2
  docker-registry: ghcr.io
  docker-image-name: ${{ github.repository }}

defaults:
  run:
    shell: bash --noprofile --norc -eo pipefail {0}

jobs:
  build:
    runs-on: ubuntu-latest
    name: "Building, Linting, Formatting"

    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.golang-version }}
        id: go

      - name: Lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: ${{ env.golangci-lint-version }}

      - name: Format
        run: |
          go install github.com/lluissm/license-header-checker/cmd/license-header-checker@v1.4.0
          make fmt
          git diff --exit-code .

      - name: Build
        run: make build

      - name: License Check
        run: |
          go install github.com/uw-labs/lichen@v0.1.7
          make license-check

  unit-test:
    name: Tests (Unit)
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          cache: false
          go-version: ${{ env.golang-version }}
        id: go

      - name: Unit-Test
        run: make unit-test

  test:
    strategy:
      fail-fast: false
      matrix:
        pg_version: [ 13, 14, 15 ]
        tsdb_version: [ "2.11", "latest" ]

    name: Tests (PG) - PG ${{ matrix.pg_version }} / TSDB ${{ matrix.tsdb_version }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          cache: false
          go-version: ${{ env.golang-version }}
        id: go

      - name: Test
        run: TSES_TEST_PG_VERSION=${{ matrix.pg_version }} TSES_TEST_TSDB_VERSION=${{ matrix.tsdb_version }} make pg-test

  integration-test:
    strategy:
      fail-fast: false
      matrix:
        test: ["aws-kinesis", "aws-sqs", "kafka", "nats", "redis", "redpanda", "http"]

    name: Tests (Int)
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          cache: false
          go-version: ${{ env.golang-version }}
        id: go

      - name: Test
        run: TSES_TEST_PG_VERSION=15 make integration-test-${{ matrix.test }}
